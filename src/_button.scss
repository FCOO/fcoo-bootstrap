/************************************************************
BUTTON

************************************************************/

/************************************************************
To be able to control font-family etc. 'buttons'
can be created as <div>
cursor-style added to prevent text-cursor on buttons
Also overwrite default bootstrap behaviour
************************************************************/
a.btn, a.list-group-item,
div.btn, div.list-group-item {
    cursor: default;
}

.btn:not(:disabled):not(.disabled) {
    cursor: default !important;
}

.btn.btn-#{$btn-style-name}{
    background-color: $control-bg-color;
    @include box-shadow($btn-box-shadow);

    //min-width used for buttons with short text ("Ok")
    &.min-width {
        min-width: 5em;
    }

    &:active,  &.active {
        background-color: darken($control-bg-color, $darken-active-percent);
        background-image: none;
        @include box-shadow($btn-active-box-shadow);
        z-index: 2;
    }

    @include control-color-and-border-color();

    &.primary {
        $color: map-get($theme-colors, primary );
        @include control-color-and-border-color( $color, $color, darken($color, $darken-border-color-hover-percent));
    }

    // Disabled comes last to overwrite active and focus
    &.disabled,  &:disabled {
        background-color: $control-bg-color;
    }

    //Selected colors when button is checkbox-style
    &.allow-zero-selected {
         @include control-active-color();

         html.mouse-hover &.active:hover {
             background: darken($control-active-bg-color, $darken-hover-percent);
         }
        &.active {
             @include control-color(
                 $control-active-color,              //$color
                 $control-active-color,              //$color-hover
                 darken($control-active-color, 10%), //$color-active
                 $control-active-color               //$color-focus
             );
        }
    }

    //Icons in buttons get equal size to allow shift of icon
    & > i.fa {
        min-width : 1em;
        text-align: left;
        &:only-child {
            text-align: center;
        }
    }

    //Container for stacked icons get same size as single icon
    & > span.fa-stack {
        width         : 1em;
        height        : 1em;
        line-height   : 1.5 * $font-size-sm;
        vertical-align: top;
    }

    /************************************************************
    Special version to have transparent button
    Default is light color on dark background
    TODO: Add transparent-on-light to have dark color og light background
    ************************************************************/
    &.transparent {
        $transparent-bg-color: rgba(0,0,0,0);
        $transparent-color   : #D4D4D4;

        background-color: $transparent-bg-color;

        @include control-color(
            $transparent-color,                 //$color
            lighten($transparent-color, 10%),   //$color-hover
            darken(white, 10%),                 //$color-active
            white                               //$color-focus
        );

        @include control-border-color (
            rgba(0,0,0, .1),    //$border-color
            rgba(0,0,0,.15),    //$border-color-hover
            false               //$incl-error
        );
    }

    /************************************************************
    Special version to have square buttons (with only icon)
    ************************************************************/
    &.square {
        overflow: hidden;

        $dim: calc(2 * #{$input-btn-padding-y} + #{$font-size-base * $input-btn-line-height} + 2 * #{$border-width});
        height: $dim;
        min-width: $dim;
        padding: $input-btn-padding-y;

        &.btn-sm {
            $small-dim: calc(2 * #{$input-btn-padding-y-sm} + #{$font-size-sm * $line-height-sm} + 2 * #{$border-width});
            height: $small-dim;
            min-width: $small-dim;
            padding: $input-btn-padding-y-sm;
        }
        //Center icon
        & > i.fa {
            text-align: center;
        }
    }

    /************************************************************
    Special version to have extra large icon
    ************************************************************/
    $big-icon-padding: 0.25rem;
    @mixin big-icon-font-size( $original-padding-y, $original-font-size, $original-line-height ){
        //Ensure that the dim of the button is the same with big icons
        font-size  : 2 * $original-padding-y + $original-font-size * $original-line-height - 2 * $big-icon-padding;
    }

    &.big-icon {
        line-height    : 1;
        padding        : $big-icon-padding !important;
        flex-direction : row;
        align-items    : center;
        justify-content: center;
        @include big-icon-font-size( $input-btn-padding-y, $font-size-base, $input-btn-line-height );

        &.btn-sm {
            @include big-icon-font-size( $input-btn-padding-y-sm, $font-size-sm, $line-height-sm );
        }
    }
}

/************************************************************
Modernizr-test for elements with class="active" when selected
************************************************************/
@include show-and-hide-for-modernizr-test(
	'active', //$modernizr-test ,
	'.btn',   //$parent-element-type: '',
	true,     //$incl-no-selector: true,
    '',       //$display-value
    false     //$incl-table-display: true
);

/************************************************************
Including .btn-xs and btn-group-xs as in Bootstrap 3
************************************************************/
.btn-xs {
    @include button-size($btn-padding-y-xs, $btn-padding-x-xs, $font-size-xs, $input-btn-line-height-sm, $btn-border-radius-xs);
}
.btn-group-xs > .btn { @extend .btn-xs; }


/************************************************************
BUTTON-GROUP
************************************************************/
//Buttons in vertical button-groups with left-aligned contents (default = center)
.btn-group-vertical.btn-group-left > .btn {
    @extend .text-left;
}

//Vertical button-group insides in popover: width = 100%
.popover-body .btn-group-vertical {
    @extend .w-100;
}

/************************************************************
LIST-GROUP and LIST-GROUP-ITEM - REMOVED FOR NOW
************************************************************/
/*
//Horizontal list-group
.list-group-horizontal {
    display       : flex;
    flex-direction: row;
}

// Size classes for items in lists
.list-group > .list-group-item,
.list-group-horizontal > .list-group-item {
    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $input-btn-line-height, $btn-border-radius);
}

//Same colors as buttons
@include control-active-color(".list-group > .list-group-item:not(.disabled), .list-group-horizontal > .list-group-item:not(.disabled)");


//Overwrite Bootstrap border-radius
.list-group > .list-group-item {
    &:first-child { @include border-top-radius   ($btn-border-radius); }
    &:last-child  { @include border-bottom-radius($btn-border-radius); }
}

//Set align-items equal to value for button.btn when list-group-item is a button
.list-group > button.list-group-item,
.list-group-horizontal > button.list-group-item {
    align-items: flex-start;
}

//Setting size
.list-group-lg > .list-group-item {
    @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $input-btn-line-height-lg, $btn-border-radius-lg);
}
.list-group-sm > .list-group-item {
    @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $input-btn-line-height-sm, $btn-border-radius-sm);
}
.list-group-xs > .list-group-item {
    @include button-size($btn-padding-y-xs, $btn-padding-x-xs, $font-size-sm, $input-btn-line-height-sm, $btn-border-radius-sm);
}


//List-items in list-groups with centered contents (default = left)
.list-group-center > .list-group-item {
    @extend .justify-content-center;
}

//Remove round boarder from items depending on it place in the group
.list-group > .list-group-item,
.list-group-horizontal > .list-group-item {
    //No round border for items in the middle
    &:not(:first-child):not(:last-child) {
        border-radius: 0;
    }
}

//Vertical => no bottom on first and no top on last
.list-group > .list-group-item {
    &:first-child:not(:last-child) { @include border-bottom-radius(0); }
    &:last-child:not(:first-child) { @include border-top-radius(0);    }
}

//Horizontal => no right on first and no left on last
.list-group-horizontal > .list-group-item {
    &:first-child:not(:last-child) { @include border-right-radius(0); }
    &:last-child:not(:first-child) { @include border-left-radius(0);  }
}
*/
