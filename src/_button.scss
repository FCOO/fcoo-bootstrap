/************************************************************
BUTTON

************************************************************/
/************************************************************
BUTTON
To avoid forced shadow and to control color a own button-mixin is defined
************************************************************/
@mixin button-color($color, $border-color: $color) {
    color       : $color;
    border-color: $border-color;

    @include focus();

    // Disabled comes first so active can properly restyle
    &.disabled,  &:disabled {
        border-color: $border-color;
    }

    &:active,  &.active,  .show > &.dropdown-toggle {
        border-color: darken($border-color, $darken-active-percent);
    }
}

/************************************************************
To be able to control font-family etc. 'buttons'
can be created as <div>
cursor-style added to prevent text-cursor on buttons
************************************************************/
a.btn, a.list-group-item,
div.btn, div.list-group-item {
    cursor: default;
}

.btn.btn-#{$btn-style-name}{
    background-color: $control-bg-color;
    @include box-shadow($btn-box-shadow);

    // Disabled comes first so active can properly restyle
    &.disabled,  &:disabled {
        background-color: $control-bg-color;
    }

    &:active,  &.active,  .show > &.dropdown-toggle {
        background-color: darken($control-bg-color, $darken-active-percent);
        background-image: none; 
        @include box-shadow($btn-active-box-shadow);
        z-index: 3; 
    }

    @include button-color( $control-color, $control-border-color );

    &.primary {
        $color: map-get($theme-colors, primary );
        @include button-color( $color ); //map-get($theme-colors, primary ) ); 
        &:hover {
            //Keep color on hover
            color: darken($color, $darken-hover-percent);
        }
    }

    //Selected colors when button is active
    @include control-active-color(&);

    //Icons in buttons get equal size to allow shift of icon
    & > i.fa {
        min-width : 1em;
        text-align: left;
    }
}


/************************************************************
Modernizr-test for elements with class="active" when selected
************************************************************/
@include show-and-hide-for-modernizr-test( 
	'active', //$modernizr-test , 
	'.btn',   //$parent-element-type: '', 
	true,     //$incl-no-selector: true, 
	true,     //$fail-as-default: false,
	false     //$incl-table-display: true 
);

/************************************************************
Including .btn-xs and btn-group-xs as in Bootstrap 3
************************************************************/
.btn-xs {
    @include button-size($btn-padding-y-xs, $btn-padding-x-xs, $font-size-xs, $input-btn-line-height-sm, $btn-border-radius-xs);
}
.btn-group-xs > .btn { @extend .btn-xs; }


/************************************************************
BUTTON-GROUP
************************************************************/
//Buttons in vertical button-groups with left-aligned contents (default = center)
.btn-group-vertical.btn-group-left > .btn {
    @extend .text-left;
}

//Vertical button-group insides in popover: width = 100%
.popover-body .btn-group-vertical {
    @extend .w-100;
}

/************************************************************
LIST-GROUP and LIST-GROUP-ITEM
************************************************************/
//Horizontal list-group
.list-group-horizontal {
    display       : flex;
    flex-direction: row;
}

// Size classes for items in lists
.list-group > .list-group-item,
.list-group-horizontal > .list-group-item { 
    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $input-btn-line-height, $btn-border-radius); 
}

//Same colors as buttons
@include control-active-color(".list-group > .list-group-item:not(.disabled), .list-group-horizontal > .list-group-item:not(.disabled)");


//Overwrite Bootstrap border-radius
.list-group > .list-group-item {
    &:first-child { @include border-top-radius   ($btn-border-radius); }
    &:last-child  { @include border-bottom-radius($btn-border-radius); }
}

//Set align-items equal to value for button.btn when list-group-item is a button
.list-group > button.list-group-item,
.list-group-horizontal > button.list-group-item { 
    align-items: flex-start;
}

//Setting size
.list-group-lg > .list-group-item { 
    @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $input-btn-line-height-lg, $btn-border-radius-lg); 
}
.list-group-sm > .list-group-item { 
    @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $input-btn-line-height-sm, $btn-border-radius-sm);
}
.list-group-xs > .list-group-item { 
    @include button-size($btn-padding-y-xs, $btn-padding-x-xs, $font-size-sm, $input-btn-line-height-sm, $btn-border-radius-sm); 
}


//List-items in list-groups with centered contents (default = left)
.list-group-center > .list-group-item {
    @extend .justify-content-center;
}

//Remove round boarder from items depending on it place in the group
.list-group > .list-group-item, 
.list-group-horizontal > .list-group-item {
    //No round border for items in the middle
    &:not(:first-child):not(:last-child) {
        border-radius: 0;
    }
}

//Vertical => no bottom on first and no top on last
.list-group > .list-group-item {
    &:first-child:not(:last-child) { @include border-bottom-radius(0); }
    &:last-child:not(:first-child) { @include border-top-radius(0);    }
}

//Horizontal => no right on first and no left on last
.list-group-horizontal > .list-group-item {
    &:first-child:not(:last-child) { @include border-right-radius(0); }
    &:last-child:not(:first-child) { @include border-left-radius(0);  }
}

